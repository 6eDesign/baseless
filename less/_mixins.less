// Mixins
// 
// Common use mixins for internal development use
// 
// | Title | Description
// |--- |--- |
// | `.clearfix()` | clearfix mixin, works exactly as you'd expect
// | `.box-sizing()` | browser prefix safe box-sizing
// | `.border-radius()` | sets border radius `//.border-radius(3px, 3px, 0, 0);`
// | `.center-block()` | sets and centers block elems
// | `.reset-spacing()` | helpful for things with default margin/padding
// | `.reset-list()` | helpful for lists, because they have so many opinions
// | `.disable-selection()` | disallow user to highlight/select an elements nodes
// | `.grid-row()` | makes a container a "row" in our grid
// | `.grid-column()` | accepts a number 1-12 of column width
// | `.grid-column-offset()` | accepts a number to offset the column width 
// 
// Styleguide scaffolding.mixins.

.clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

//
// .box-sizing
//

.box-sizing(@box-model) {
  -webkit-box-sizing: @box-model; // Safari <= 5
     -moz-box-sizing: @box-model; // Firefox <= 19
          box-sizing: @box-model;
}

//
// .border-radius
//

.border-radius(@tleft: @elem-border-radius-base, @tright: @tleft, @bright: @tleft, @bleft: @tright) {
  border-radius: @tleft @tright @bright @bleft;
}

//
// .border-circle
//

.border-circle() {
  border-radius: 100%;
}

//
// .center-block
//

.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//
// .reset-spacing
// i find myself doing this constantly, you may find this
// useful as well
// 

.reset-spacing(@margin: 0, @padding: 0) {
  margin: @margin;
  padding: @padding;
}

//
// .reset-list
// i also find myself doing this constantly, sharing the
// wealth <3
//

.reset-list(@margin, @padding) {
  .reset-spacing(@margin, @padding);
  list-style-type: none;
  display: block;
  li {
    .reset-spacing(@margin, @padding);
    display: block;
  }
}

//
// .opacity(@opacity)
// set opacity for all the browsers
//

.opacity(@opacity) {
  opacity: @opacity;
  @opacity-ie: @opacity * 100;
  filter: ~"alpha(opacity=@{opacity-ie})"; // IE8
}

//
// .size(@width, @height)
// set size for block elems and other various helpers
//

.size(@width, @height) {
  width: @width;
  height: @height;
  line-height: @height;
}

.square(@size) {
  .size(@size, @size);
}

//
// .disable-selection
// makes modern browsers not allow the selection
// more info @ https://css-tricks.com/almanac/properties/u/user-select/
//

.disable-selection() {
  -webkit-user-select: none;  /* Chrome all / Safari all */
  -moz-user-select: none;     /* Firefox all */
  -ms-user-select: none;      /* IE 10+ */
}

//
// .grid-row, .grid-column, .grid-column-offset
//

.grid-row() {
  // negative margin the row out to align the content of columns
  margin-left: -@grid-column-padding;
  margin-right: -@grid-column-padding;
  // then clear the floated columns
  .clearfix();
}

.grid-column(@columns) {
  @media (min-width: @grid-float-breakpoint) {
    float: left;
    // Calculate width based on number of columns available
    width: percentage(@columns / @grid-columns);
  }
  // prevent columns from collapsing when empty
  &.no-collapse {
    min-height: 1px;
  }
  // set inner padding as gutters instead of margin
  padding-left: @grid-column-padding;
  padding-right: @grid-column-padding;
  // proper box-model (padding doesn't add to width)
  .box-sizing(border-box);
}

.grid-column-offset(@columns) {
  margin-left: percentage(@columns / @grid-columns);
}

.grid-column-generator (@i) when (@i > 0) {
  &.@{i}-col {
    .grid-column(@i);
  }
  .grid-column-generator(@i - 1);
}

// Card Generator
//
// Useful when you use this as the base for your UI component
.card-generator(@bg: @color-card-warm-grey, @border: @color-card-warm-grey-border, @color: @color-inverted) {
  background: @bg;
  border: 1px solid @border;
  color: @color;
  &.no-border {
    border-color: transparent;
  }
}